



fn main() {
  println("todo: make notes contain the ast");

  s = readFileAsString("test/simple.vmd");
  input = InputIter(s.slice(), true);
  
  metadata = parseMetadata(&input);

  collectedNotes! = CollectedNotes();

  pageMembers = List<PageMember>();
  each (&input.rest.split("\n\n\n")) (sectionSource!){
    mut sectionSource = sectionSource.trimnl();

    if (sectionSource.startsWith("<notes/>")) {
      mut sectionSource = sectionSource.slice("<notes/>".len());
      pageMembers.add(mut collectedNotes = CollectedNotes());
    } else if (sectionSource.startsWith("<notes>")) {
      mut sectionSource = sectionSource.slice("<notes>".len());
      vassert(sectionSource.endsWith("</notes>"), "SectionSource doesnt end with </notes>!");
      mut sectionSource = sectionSource.slice(0, sectionSource.len() - "</notes>".len());

      parseSeparateNotes(&collectedNotes, sectionSource);
      pageMembers.add(mut collectedNotes = CollectedNotes());
    } else {
      section = parseSection(&collectedNotes, sectionSource);
      pageMembers.add(section);
    }
  }

  pageMembers.add(mut collectedNotes = CollectedNotes());

  page = Page(metadata, pageMembers);

  output! = Output();
  printPage(&output, &page);

  println(output.assembleStr());
}
