
// fn doThing() int extern;

fn main() export {
  if (numMainArgs() < 2) {
    println("Usage: " + getMainArg(0) + " [build|testvale]");
    ret void();
  }

  all_args_list = List<str>();
  i! = 0;
  while (i < numMainArgs()) {
    all_args_list!.add(getMainArg(i));
    mut i = i + 1;
  }
  all_args = all_args_list.toImmArray();

  parse_all_flags(
    [][
      Flag("bork", FLAG_INT(), "bork bork bork", "booork", "--bork 5")
    ],
    all_args);

  if (getMainArg(1) == "build") {
    if (numMainArgs() < 5) {
      println("Usage: " + getMainArg(0) + " build input.vmd output.html Valestrom.jar");
      ret void();
    }

    valestromPath = getMainArg(2);
    inFilepath = getMainArg(3);
    outFilepath = getMainArg(4);

    page = parse(inFilepath);

    output = Output();
    tocRootList = makeTocRootList(&!page);
    printPage(&!output, valestromPath, &page, &tocRootList);

    writeStringToFile(outFilepath, output.assembleStr());
  } else if (getMainArg(1) == "testvale") {

    if (numMainArgs() < 4) {
      println("Usage: " + getMainArg(0) + " testvale input.vmd Valestrom.jar");
      ret void();
    }

    valestromPath = getMainArg(2);
    inFilepath = getMainArg(3);

    // println("doing testvale");

    page = parse(inFilepath);

    testPage(valestromPath, &page);
  } else {
    println("Unknown mode: " + getMainArg(0));
  }
}
