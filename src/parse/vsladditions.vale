
struct ExecuteProgramResult export {
  returnCode int;
  stdout str;
  stderr str;
}
fn ExecuteProgramResultNew(returnCode int, stdout str, stderr str)
ExecuteProgramResult export {
  ExecuteProgramResult(returnCode, stdout, stderr)
}

fn executeProgram(command str) ExecuteProgramResult extern;


fn replaceAll(haystack! StrSlice, needle StrSlice, replacement StrSlice) StrSlice {
  result! = "";
  while (true) {
    maybeSplit = splitOnce(haystack, needle);
    if (maybeSplit.isEmpty()) {
      mut result = result + haystack;
      ret result.slice();
    }
    (initial, rest) = maybeSplit^.get();
    mut result = result + initial + replacement;
    mut haystack = rest;
  }
  // unreachable
  ret "".slice();
}
