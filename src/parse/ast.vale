
struct Page {
  metadata Metadata;
  members List<PageMember>;
}

interface PageMember {}

struct Metadata {
  title StrSlice;
  subtitle StrSlice;
  author StrSlice;
  date StrSlice;
  path StrSlice;
  namespace StrSlice;
}

struct Section {
  members List<SectionMember>;
}
impl PageMember for Section;




struct Notes {
  noteInternalIds List<int>;
  noteContentsByInternalId HashMap<int, Section, IntHasher, IntEquator>;
}
impl PageMember for Notes;



interface SectionMember {}

struct Paragraph {
  contents InlineNode;
}
impl SectionMember for Paragraph;


struct Header {
  level int;
  text StrSlice;
}
impl SectionMember for Header;


struct CodeSnippet {
  language StrSlice;
  code StrSlice;
}
impl SectionMember for CodeSnippet;


struct UnorderedList {
  members List<ListMember>;
}
impl SectionMember for UnorderedList;

interface ListMember {}
impl ListMember for UnorderedList;

struct ListItem {
  contents InlineNode;
}
impl ListMember for ListItem;


interface InlineNode {}

struct Compound { inners List<InlineNode>; }
impl InlineNode for Compound;

struct Bold { inner InlineNode; }
impl InlineNode for Bold;

struct Link {
  text StrSlice;
  url StrSlice;
}
impl InlineNode for Link;

struct Italic { inner InlineNode; }
impl InlineNode for Italic;

struct Text { text StrSlice; }
impl InlineNode for Text;

struct InlineCode { inner StrSlice; }
impl InlineNode for InlineCode;

struct NoteAnchor { internalId int; }
impl InlineNode for NoteAnchor;
